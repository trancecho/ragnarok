name: Semantic Version Tag

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: write

jobs:
  semver-tag:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get latest tag
        id: get-tag
        run: |
          latest_tag=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")
          echo "Latest tag: $latest_tag"
          
          # 更健壮的版本号解析
          version=$(echo "$latest_tag" | sed 's/^v//')
          IFS='.' read -r major minor patch <<< "$version"
          
          # 设置默认值（如果任何部分为空）
          major=${major:-0}
          minor=${minor:-0}
          patch=${patch:-0}
          
          # 增加补丁版本号
          patch=$((patch + 1))
          new_tag="v${major}.${minor}.${patch}"
          
          # 验证标签名格式
          if [[ ! "$new_tag" =~ ^v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "Error: Invalid tag format: $new_tag"
            exit 1
          fi
          
          echo "New tag: $new_tag"
          echo "new_tag=$new_tag" >> $GITHUB_OUTPUT

      - name: Create new tag
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git tag ${{ steps.get-tag.outputs.new_tag }}
          git push origin ${{ steps.get-tag.outputs.new_tag }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}